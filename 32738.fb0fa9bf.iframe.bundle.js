(globalThis.webpackChunkmetamask_crx=globalThis.webpackChunkmetamask_crx||[]).push([[32738],{"./node_modules/@metamask/accounts-controller/dist/utils.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{o7:()=>keyringTypeToName});var KeyringController=__webpack_require__("./node_modules/@metamask/keyring-controller/dist/KeyringController.mjs"),_assert=__webpack_require__("./node_modules/ethereum-cryptography/node_modules/@noble/hashes/esm/_assert.js"),utils=__webpack_require__("./node_modules/ethereum-cryptography/node_modules/@noble/hashes/esm/utils.js");function setBigUint64(view,byteOffset,value,isLE){if("function"==typeof view.setBigUint64)return view.setBigUint64(byteOffset,value,isLE);let _32n=BigInt(32),_u32_max=BigInt(4294967295),wh=Number(value>>_32n&_u32_max),wl=Number(value&_u32_max),h=isLE?4:0,l=isLE?0:4;view.setUint32(byteOffset+h,wh,isLE),view.setUint32(byteOffset+l,wl,isLE)}let Chi=(a,b,c)=>a&b^~a&c,Maj=(a,b,c)=>a&b^a&c^b&c;class HashMD extends utils.Vw{constructor(blockLen,outputLen,padOffset,isLE){super(),this.blockLen=blockLen,this.outputLen=outputLen,this.padOffset=padOffset,this.isLE=isLE,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(blockLen),this.view=(0,utils.O8)(this.buffer)}update(data){(0,_assert.t2)(this);let{view,buffer,blockLen}=this,len=(data=(0,utils.ZJ)(data)).length;for(let pos=0;pos<len;){let take=Math.min(blockLen-this.pos,len-pos);if(take===blockLen){let dataView=(0,utils.O8)(data);for(;blockLen<=len-pos;pos+=blockLen)this.process(dataView,pos);continue}buffer.set(data.subarray(pos,pos+take),this.pos),this.pos+=take,pos+=take,this.pos===blockLen&&(this.process(view,0),this.pos=0)}return this.length+=data.length,this.roundClean(),this}digestInto(out){(0,_assert.t2)(this),(0,_assert.CG)(out,this),this.finished=!0;let{buffer,view,blockLen,isLE}=this,{pos}=this;buffer[pos++]=128,this.buffer.subarray(pos).fill(0),this.padOffset>blockLen-pos&&(this.process(view,0),pos=0);for(let i=pos;i<blockLen;i++)buffer[i]=0;setBigUint64(view,blockLen-8,BigInt(8*this.length),isLE),this.process(view,0);let oview=(0,utils.O8)(out),len=this.outputLen;if(len%4)throw Error("_sha2: outputLen should be aligned to 32bit");let outLen=len/4,state=this.get();if(outLen>state.length)throw Error("_sha2: outputLen bigger than state");for(let i=0;i<outLen;i++)oview.setUint32(4*i,state[i],isLE)}digest(){let{buffer,outputLen}=this;this.digestInto(buffer);let res=buffer.slice(0,outputLen);return this.destroy(),res}_cloneInto(to){to||(to=new this.constructor),to.set(...this.get());let{blockLen,buffer,length,finished,destroyed,pos}=this;return to.length=length,to.pos=pos,to.finished=finished,to.destroyed=destroyed,length%blockLen&&to.buffer.set(buffer),to}}let SHA256_K=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),SHA256_IV=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),SHA256_W=new Uint32Array(64);class SHA256 extends HashMD{constructor(){super(64,32,8,!1),this.A=0|SHA256_IV[0],this.B=0|SHA256_IV[1],this.C=0|SHA256_IV[2],this.D=0|SHA256_IV[3],this.E=0|SHA256_IV[4],this.F=0|SHA256_IV[5],this.G=0|SHA256_IV[6],this.H=0|SHA256_IV[7]}get(){let{A,B,C,D,E,F,G,H}=this;return[A,B,C,D,E,F,G,H]}set(A,B,C,D,E,F,G,H){this.A=0|A,this.B=0|B,this.C=0|C,this.D=0|D,this.E=0|E,this.F=0|F,this.G=0|G,this.H=0|H}process(view,offset){for(let i=0;i<16;i++,offset+=4)SHA256_W[i]=view.getUint32(offset,!1);for(let i=16;i<64;i++){let W15=SHA256_W[i-15],W2=SHA256_W[i-2],s0=(0,utils.Ow)(W15,7)^(0,utils.Ow)(W15,18)^W15>>>3,s1=(0,utils.Ow)(W2,17)^(0,utils.Ow)(W2,19)^W2>>>10;SHA256_W[i]=s1+SHA256_W[i-7]+s0+SHA256_W[i-16]|0}let{A,B,C,D,E,F,G,H}=this;for(let i=0;i<64;i++){let T1=H+((0,utils.Ow)(E,6)^(0,utils.Ow)(E,11)^(0,utils.Ow)(E,25))+Chi(E,F,G)+SHA256_K[i]+SHA256_W[i]|0,T2=((0,utils.Ow)(A,2)^(0,utils.Ow)(A,13)^(0,utils.Ow)(A,22))+Maj(A,B,C)|0;H=G,G=F,F=E,E=D+T1|0,D=C,C=B,B=A,A=T1+T2|0}A=A+this.A|0,B=B+this.B|0,C=C+this.C|0,D=D+this.D|0,E=E+this.E|0,F=F+this.F|0,G=G+this.G|0,H=H+this.H|0,this.set(A,B,C,D,E,F,G,H)}roundClean(){SHA256_W.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}}let sha256_sha256=(0,utils.ld)(()=>new SHA256);function keyringTypeToName(keyringType){if((0,KeyringController.R0)(keyringType))return"Custody";switch(keyringType){case KeyringController.rI.simple:case KeyringController.rI.hd:return"Account";case KeyringController.rI.trezor:return"Trezor";case KeyringController.rI.oneKey:return"OneKey";case KeyringController.rI.ledger:return"Ledger";case KeyringController.rI.lattice:return"Lattice";case KeyringController.rI.qr:return"QR";case KeyringController.rI.snap:return"Snap Account";default:throw Error(`Unknown keyring ${keyringType}`)}}(0,__webpack_require__("./node_modules/ethereum-cryptography/esm/utils.js").RS)(sha256_sha256)},"./test/jest/mocks.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{H5:()=>createMockInternalAccount,rV:()=>getSelectedInternalAccountFromMockState});var _metamask_keyring_api__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@metamask/keyring-api/dist/index.mjs"),_metamask_keyring_controller__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@metamask/keyring-controller/dist/KeyringController.mjs"),uuid__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/uuid/dist/esm-browser/v4.js"),_metamask_accounts_controller__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@metamask/accounts-controller/dist/utils.mjs"),_ui_ducks_send__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./ui/ducks/send/index.js"),_shared_lib_multichain_accounts__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./shared/lib/multichain/accounts.ts");function _array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){_define_property(target,key,source[key])})}return target}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function _object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function createMockInternalAccount(){var scopes,methods,_ref=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},_ref_name=_ref.name,name=void 0===_ref_name?"Account 1":_ref_name,_ref_address=_ref.address,address=void 0===_ref_address?"0xd5e099c71b797516c10ed0f0d895f429c2781111":_ref_address,_ref_type=_ref.type,type=void 0===_ref_type?_metamask_keyring_api__WEBPACK_IMPORTED_MODULE_0__.j0.Eoa:_ref_type,_ref_keyringType=_ref.keyringType,keyringType=void 0===_ref_keyringType?_metamask_keyring_controller__WEBPACK_IMPORTED_MODULE_3__.rI.hd:_ref_keyringType,_ref_lastSelected=_ref.lastSelected,_ref_snapOptions=_ref.snapOptions,_ref_options=_ref.options,options=void 0===_ref_options?void 0:_ref_options;switch(type){case _metamask_keyring_api__WEBPACK_IMPORTED_MODULE_0__.j0.Eoa:scopes=[_metamask_keyring_api__WEBPACK_IMPORTED_MODULE_0__.OO.Eoa],methods=[_metamask_keyring_api__WEBPACK_IMPORTED_MODULE_0__.F.PersonalSign,_metamask_keyring_api__WEBPACK_IMPORTED_MODULE_0__.F.SignTransaction,_metamask_keyring_api__WEBPACK_IMPORTED_MODULE_0__.F.SignTypedDataV1,_metamask_keyring_api__WEBPACK_IMPORTED_MODULE_0__.F.SignTypedDataV3,_metamask_keyring_api__WEBPACK_IMPORTED_MODULE_0__.F.SignTypedDataV4];break;case _metamask_keyring_api__WEBPACK_IMPORTED_MODULE_0__.j0.Erc4337:scopes=[_metamask_keyring_api__WEBPACK_IMPORTED_MODULE_0__.OO.Testnet],methods=[_metamask_keyring_api__WEBPACK_IMPORTED_MODULE_0__.F.PatchUserOperation,_metamask_keyring_api__WEBPACK_IMPORTED_MODULE_0__.F.PrepareUserOperation,_metamask_keyring_api__WEBPACK_IMPORTED_MODULE_0__.F.SignUserOperation];break;case _metamask_keyring_api__WEBPACK_IMPORTED_MODULE_0__.fi.P2wpkh:scopes=[address&&(0,_shared_lib_multichain_accounts__WEBPACK_IMPORTED_MODULE_2__.C2)(address)?_metamask_keyring_api__WEBPACK_IMPORTED_MODULE_0__.um.Mainnet:_metamask_keyring_api__WEBPACK_IMPORTED_MODULE_0__.um.Testnet],methods=[_metamask_keyring_api__WEBPACK_IMPORTED_MODULE_0__.Dj.SendBitcoin];break;case _metamask_keyring_api__WEBPACK_IMPORTED_MODULE_0__.Ux.DataAccount:scopes=[_metamask_keyring_api__WEBPACK_IMPORTED_MODULE_0__.Zx.Mainnet,_metamask_keyring_api__WEBPACK_IMPORTED_MODULE_0__.Zx.Testnet,_metamask_keyring_api__WEBPACK_IMPORTED_MODULE_0__.Zx.Devnet],methods=[_metamask_keyring_api__WEBPACK_IMPORTED_MODULE_0__.CG.SendAndConfirmTransaction];break;default:throw Error("Unknown account type: ".concat(type))}return{address:address,id:(0,uuid__WEBPACK_IMPORTED_MODULE_4__.A)(),metadata:{name:null!=name?name:"".concat((0,_metamask_accounts_controller__WEBPACK_IMPORTED_MODULE_5__.o7)(keyringType)," 1"),importTime:Date.now(),keyring:{type:keyringType},snap:keyringType===_metamask_keyring_controller__WEBPACK_IMPORTED_MODULE_3__.rI.snap?void 0===_ref_snapOptions?{enabled:!0,id:"npm:snap-id",name:"snap-name"}:_ref_snapOptions:void 0,lastSelected:void 0===_ref_lastSelected?0:_ref_lastSelected},options:null!=options?options:{},scopes:scopes,methods:methods,type:type}}_object_spread_props(_object_spread({},_ui_ducks_send__WEBPACK_IMPORTED_MODULE_1__.ue),{currentTransactionUUID:"test-uuid",draftTransactions:{"test-uuid":_object_spread({},_ui_ducks_send__WEBPACK_IMPORTED_MODULE_1__.zv)}});var getSelectedInternalAccountFromMockState=function(state){return state.metamask.internalAccounts.accounts[state.metamask.internalAccounts.selectedAccount]}},"./node_modules/lodash/isEqual.js":(module,__unused_webpack_exports,__webpack_require__)=>{var baseIsEqual=__webpack_require__("./node_modules/lodash/_baseIsEqual.js");function isEqual(value,other){return baseIsEqual(value,other)}module.exports=isEqual},"./test/data/mock-estimates.json":module=>{"use strict";module.exports=JSON.parse('{"fee-market":{"gasEstimateType":"fee-market","gasFeeEstimates":{"low":{"minWaitTimeEstimate":180000,"maxWaitTimeEstimate":300000,"suggestedMaxPriorityFeePerGas":"3","suggestedMaxFeePerGas":"53"},"medium":{"minWaitTimeEstimate":15000,"maxWaitTimeEstimate":60000,"suggestedMaxPriorityFeePerGas":"7","suggestedMaxFeePerGas":"70"},"high":{"minWaitTimeEstimate":0,"maxWaitTimeEstimate":15000,"suggestedMaxPriorityFeePerGas":"10","suggestedMaxFeePerGas":"100"},"estimatedBaseFee":"50","networkCongestion":0.5184,"latestPriorityFeeRange":["1","20"],"historicalPriorityFeeRange":["2","125"],"historicalBaseFeeRange":["50","100"],"priorityFeeTrend":"up","baseFeeTrend":"down"},"estimatedGasFeeTimeBounds":{}}}')}}]);